{"version":3,"sources":["components/NavBarTitle/NavBarTitle.module.css","containers/HomeButtons/HomeButtons.module.css","components/ButtonCategory/ButtonCategory.module.css","components/NavBarTitle/NavBarTitle.js","components/ButtonCategory/ButtonCategory.js","components/Footer/Footer.js","containers/HomeButtons/HomeButtons.js","components/WinnerCard/WinnerCard.js","components/SearchBar/SearchBar.js","components/ShowAll/ShowAll.js","containers/CardsCategory/CardsCategory.js","containers/Routing.js","App.js","index.js"],"names":["module","exports","NavBarTitle","style","display","width","Nav","Link","className","classes","styleText","href","Component","buttonCategory","props","b","name","onClick","value","Footer","position","color","fontSize","textAlign","top","margin","outline","boxShadow","HomeButtons","handleClick","buttonValue","console","log","slice","toLowerCase","history","push","allCatMap","map","button","ButtonCategory","key","toString","e","target","container__section","WinnerCard","Card","Header","as","category","Body","Title","awardYear","name1","name2","Text","motivation","SearchBar","state","searchYear","searchName","onChange","setState","onSubmit","preventDefault","searchAll","this","clearResults","showReset","Form","type","Label","htmlFor","Control","ref","input","inputField","onFocus","Button","variant","ShowAll","onClickAll","onClickReset","allCardsNP","Cards","allCards","searchYearNP","searchNameNP","a","match","params","category_name","axios","get","then","res","categoryData","data","nobelPrizes","yearMatchNP","catch","err","laureates","yearMatch","clearResultsNP","filterCards","filter","card","knownName","en","includes","id","gender","filterCardsNP","cardNP","showResetNP","length","Routing","path","component","exact","CardsCategory","App","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,MAAQ,2BAA2B,UAAY,iC,mBCAjED,EAAOC,QAAU,CAAC,mBAAqB,0C,mBCAvCD,EAAOC,QAAU,CAAC,EAAI,0BAA0B,QAAU,kC,2PCkB3CC,E,uKAZP,OACI,yBAAKC,MAAO,CAAEC,QAAS,QAASC,MAAO,SACnC,kBAACC,EAAA,EAAIC,KAAL,CACIC,UAAWC,IAAQC,UACnBC,KAAK,KAFT,wB,GAJUC,a,kCCeXC,MAjBf,SAAwBC,GAGpB,OACI,4BACCN,UAAWC,IAAQM,EAGhBC,KAAMF,EAAME,KACZC,QAASH,EAAMG,QACfC,MAAOJ,EAAMI,OAEZJ,EAAME,OCoBJG,E,uKAZP,OACI,yBAAKhB,MAAO,CAAEC,QAAS,QAASC,MAAO,SACnC,kBAACC,EAAA,EAAIC,KAAL,CACIJ,MAjBQ,CAEhBC,QAAS,eACTgB,SAAU,WACVC,MAAO,QACPC,SAAU,QACVC,UAAW,SACXC,IAAK,MACLnB,MAAO,OACPoB,OAAQ,OACRC,QAAS,kBACTC,UAAW,mBAOHhB,KAAK,uDAFT,e,GAnBKC,aC0DNgB,E,4MAvDXC,YAAc,SAACC,GACXC,QAAQC,IAAI,oBAAqB,EAAKlB,OAEtCgB,EAAcA,EAAYG,MAAM,EAAG,GAAGC,cAWtC,EAAKpB,MAAMqB,QAAQC,KAAK,IAAMN,I,uDAIxB,IAAD,OAGCO,EADuB,CAAC,UAAW,YAAa,WAAY,aAAc,QAAS,aAClDC,KAAI,SAAAC,GAAM,OAC7C,kBAAEC,EAAF,CAEIC,IAAKF,EAAOG,WACZxB,MAAOqB,EACPvB,KAAMuB,EACNtB,QAAS,SAAA0B,GAAC,OAAI,EAAKd,YAAYc,EAAEC,OAAO1B,aAehD,OAEI,yBAAKV,UAAWC,IAAQoC,oBAEnBR,EAED,kBAAC,EAAD,W,GAlDUzB,a,wDCuBXkC,MAxBf,SAAoBhC,GAEhB,OACI,yBAAKN,UAAU,aACX,yBAAKA,UAAU,8BACX,kBAACuC,EAAA,EAAD,CAAMvC,UAAU,kDACZ,kBAACuC,EAAA,EAAKC,OAAN,CAAaxC,UAAU,aAAayC,GAAG,MAAMnC,EAAMoC,SAAnD,cACA,kBAACH,EAAA,EAAKI,KAAN,CAAW3C,UAAU,SAEjB,kBAACuC,EAAA,EAAKK,MAAN,CAAY5C,UAAU,aAAayC,GAAG,MAAMnC,EAAMuC,WAClD,kBAACN,EAAA,EAAKK,MAAN,CAAY5C,UAAU,aAAayC,GAAG,MAAOnC,EAAME,MACnD,kBAAC+B,EAAA,EAAKK,MAAN,CAAY5C,UAAU,aAAayC,GAAG,MAAOnC,EAAMwC,OACnD,kBAACP,EAAA,EAAKK,MAAN,CAAY5C,UAAU,aAAayC,GAAG,MAAOnC,EAAMyC,OAEnD,kBAACR,EAAA,EAAKS,KAAN,CAAWhD,UAAU,OAAOyC,GAAG,MAAK,2CAApC,KAA0DnC,EAAM2C,WAAhE,U,wBC0FTC,E,4MApGXC,MAAQ,CACJC,WAAY,GACZC,WAAY,GACZX,SAAU,I,EAUdY,SAAW,SAAAnB,GACP,EAAKoB,SAAL,eAAiBpB,EAAEC,OAAO5B,KAAO2B,EAAEC,OAAO1B,QAC1Ca,QAAQC,IAAI,0BAA2BW,EAAEC,OAAO1B,Q,EAGpD8C,SAAW,SAAArB,GACPA,EAAEsB,iBAIF,EAAKnD,MAAMoD,UAAU,EAAKP,MAAMC,WAAY,EAAKD,MAAME,YAEvD,EAAKE,SAAS,CACVH,WAAY,GACZC,WAAY,GACZX,SAAU,Q,uDAyBR,IAAD,SAC+BiB,KAAKrD,MAAjCsD,EADH,EACGA,aAAcC,EADjB,EACiBA,UACtB,OACI,kBAACC,EAAA,EAAD,CACI9D,UAAU,oDACV+D,KAAK,SACLP,SAAUG,KAAKH,UAEf,kBAACM,EAAA,EAAKE,MAAN,CAAYC,QAAQ,GAAGjE,UAAU,wEAAjC,UACA,kBAAC8D,EAAA,EAAKI,QAAN,CACIH,KAAK,OACL/D,UAAU,iDACVQ,KAAK,aACLE,MAAOiD,KAAKR,MAAMC,WAClBE,SAAUK,KAAKL,SACfa,IAAK,SAAAC,GAAK,OAAI,EAAKC,WAAaD,GAChCE,QAAS,kBAAM,EAAKD,WAAW3D,MAAQ,MAE3C,kBAACoD,EAAA,EAAKE,MAAN,CAAYC,QAAQ,GAAGjE,UAAU,8DAAjC,UACA,kBAAC8D,EAAA,EAAKI,QAAN,CACIH,KAAK,OACL/D,UAAU,qCACVQ,KAAK,aACLE,MAAOiD,KAAKR,MAAME,WAClBC,SAAUK,KAAKL,WAEnB,kBAACiB,EAAA,EAAD,CACIR,KAAK,SACLP,SAAUG,KAAKH,SACfgB,QAAQ,gDAHZ,UAQCX,GACG,kBAACU,EAAA,EAAD,CACIR,KAAK,QACLS,QAAQ,+CACR/D,QAASmD,GAHb,c,GAzFIxD,aC0FTqE,E,4MA3FXtB,MAAQ,CACJC,WAAY,GACZC,WAAY,GACZX,SAAU,I,EAyBdc,SAAW,SAAArB,GACPA,EAAEsB,iBAEF,EAAKnD,MAAMoE,aAEX,EAAKnB,SAAS,CACVH,WAAY,GACZC,WAAY,GACZX,SAAU,Q,EAqBlBiC,aAAe,SAAAxC,GACX,EAAKoB,SAAS,CACVqB,WAAY,M,uDAMhB,OACI,kBAACd,EAAA,EAAD,CACI9D,UAAU,oDACV+D,KAAK,SACLP,SAAUG,KAAKH,UAGf,kBAACe,EAAA,EAAD,CACIR,KAAK,SACLS,QAAQ,+CACRhB,SAAUG,KAAKH,UAHnB,mC,GAzEMpD,aC0KPyE,E,4MA9JX1B,MAAQ,CACJ2B,SAAU,GACVF,WAAY,GACZlC,SAAU,KACVU,WAAY,GACZ2B,aAAc,GACd1B,WAAY,GACZ2B,aAAc,I,EAmBlBN,W,uCAAa,WAAOtB,EAAYC,GAAnB,eAAA4B,EAAA,sDAILvC,EAAW,EAAKpC,MAAM4E,MAAMC,OAAOC,cACvCC,IAAMC,IAAI,mFAAqF5C,EAAW,2BACrG6C,MAAK,SAAAC,GAAQ,IAAD,EACHC,EAAeD,EAAIE,KAAKC,YACxBC,EAAW,UAAGJ,EAAIE,KAAKC,YAAY,UAAxB,aAAG,EAAyB9C,UAE7C,EAAKU,SAAS,CACVqB,WAAYa,EACZV,aAAca,EACdlD,SAAU,EAAKpC,MAAM4E,MAAMC,OAAOC,mBAGzCS,OAAM,SAAAC,GAAG,OAAIvE,QAAQC,IAAIsE,MAC9B,EAAKlC,eAjBI,2C,0DAsBbF,U,uCAAY,WAAON,EAAYC,GAAnB,eAAA4B,EAAA,6DAGJvC,EAAW,EAAKpC,MAAM4E,MAAMC,OAAOC,cAH/B,SAKFC,IAAMC,IAAN,iEAAoEjC,EAApE,2BAAiGD,EAAjG,+BAAkIV,IACnI6C,MAAK,SAAAC,GAAQ,IAAD,IACHE,EAAOF,EAAIE,KAAKK,UAIhBC,EAAS,UAAGR,EAAIE,KAAKK,UAAU,UAAtB,iBAAG,EAAuBJ,YAAY,UAAtC,aAAG,EAAuC9C,UAEzD,EAAKU,SAAS,CACVuB,SAAUY,EAEVtC,WAAY4C,OAGnBH,OAAM,SAAAC,GAAG,OAAIvE,QAAQC,IAAIsE,MAnBtB,OAoBR,EAAKG,iBApBG,2C,0DAuBZrC,aAAe,SAACA,GACZ,EAAKL,SAAS,CACVuB,SAAU,M,EAIlBmB,eAAiB,SAACA,GACd,EAAK1C,SAAS,CACVqB,WAAY,M,uDAUV,IAAD,EACkEjB,KAAKR,MAApEE,EADH,EACGA,WAAwB2B,GAD3B,EACe5B,WADf,EAC2B4B,cAAcF,EADzC,EACyCA,SAAUF,EADnD,EACmDA,WAGpDsB,EAAcpB,EAASqB,QAAO,SAAAC,GAAS,IAAD,EACtC,OACIA,EAAI,UACAA,EAAKC,iBADL,aACA,EAAgBC,GAAG5E,cAAc6E,SAASlD,EAAW3B,eACnDH,QAAQC,IAAI,mBAEvBM,KAAI,SAACsE,GAAU,IAAD,UACb,OAAO,kBAAC,EAAD,CACHnE,IAAKmE,EAAKI,GACV3D,UAAWuD,EAAKT,YAAY,GAAG9C,UAC/BH,SAAQ,UAAE0D,EAAKT,YAAY,UAAnB,iBAAE,EAAqBjD,gBAAvB,aAAE,EAA+B4D,GACzC9F,KAAI,UAAE4F,EAAKC,iBAAP,aAAE,EAAgBC,GACtBG,OAAQL,EAAKK,OACbxD,WAAU,UAAEmD,EAAKT,YAAY,UAAnB,iBAAE,EAAqB1C,kBAAvB,aAAE,EAAiCqD,QAKjDI,EAAgB9B,EAAWuB,QAAO,SAAAQ,GAAW,IAAD,YAC5C,OACIA,EAAOZ,WACH,UAAAY,EAAOZ,UAAU,UAAjB,mBAAqBM,iBAArB,eAAgCC,GAAG5E,cAAc6E,SAASvB,EAAatD,kBAAvE,UACAiF,EAAOZ,UAAU,UADjB,iBACA,EAAqBM,iBADrB,aACA,EAAgCC,GAAG5E,cAAc6E,SAASvB,EAAatD,kBADvE,UAEAiF,EAAOZ,UAAU,UAFjB,iBAEA,EAAqBM,iBAFrB,aAEA,EAAgCC,GAAG5E,cAAc6E,SAASvB,EAAatD,gBACrEH,QAAQC,IAAI,WAEvBM,KAAI,SAAC6E,GAAY,IAAD,kBACf,OAAO,kBAAC,EAAD,CACH1E,IAAK0E,EAAOH,GACZ3D,UAAW8D,EAAO9D,UAClBH,SAAQ,UAAEiE,EAAOjE,gBAAT,aAAE,EAAiB4D,GAC3B9F,KAAI,UAAEmG,EAAOZ,UAAU,UAAnB,iBAAE,EAAqBM,iBAAvB,aAAE,EAAgCC,GACtCxD,MAAK,UAAE6D,EAAOZ,UAAU,UAAnB,iBAAE,EAAqBM,iBAAvB,aAAE,EAAgCC,GACvCvD,MAAK,UAAE4D,EAAOZ,UAAU,UAAnB,iBAAE,EAAqBM,iBAAvB,aAAE,EAAgCC,GACvCrD,WAAU,UAAE0D,EAAOZ,UAAU,UAAnB,iBAAE,EAAqB9C,kBAAvB,aAAE,EAAiCqD,QAMrD,OACI,6BAII,6BACI,kBAAC,EAAD,CACI5B,WAAYf,KAAKe,WACjBuB,eAAgBtC,KAAKsC,eACrBW,YAAahC,EAAWiC,OAAS,IAErC,kBAAC,EAAD,CACInD,UAAWC,KAAKD,UAChBE,aAAcD,KAAKC,aACnBC,UAAWiB,EAAS+B,OAAS,KAErC,6BACKX,EACAQ,Q,GAxJDtG,aCEL0G,E,uKAZP,OACI,6BACI,kBAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWtH,IAC3B,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOuH,OAAK,EAACF,KAAK,IAAIC,UAAW5F,IACjC,kBAAC,IAAD,CAAO2F,KAAK,kBAAkBC,UAAWE,U,GAPvC9G,aCcP+G,E,uKAZX,OACE,6BACE,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,a,GANMhH,a,YCClBiH,IAASC,OACP,kBAAC,IAAMF,WAAP,KACE,kBAAC,EAAD,OAEFG,SAASC,eAAe,W","file":"static/js/main.8bc7e284.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"style\":\"NavBarTitle_style__3lHKZ\",\"styleText\":\"NavBarTitle_styleText__6NvGe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container__section\":\"HomeButtons_container__section__2Mxb2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"b\":\"ButtonCategory_b__2p6Jp\",\"buttons\":\"ButtonCategory_buttons__2igj2\"};","import React, { Component } from 'react';\nimport classes from './NavBarTitle.module.css';\n// import { Link, Nav } from \"react-router-dom\";\nimport Nav from 'react-bootstrap/Nav';\n\nclass NavBarTitle extends Component {\n    render() {\n        return (\n            <div style={{ display: 'block', width: '100%' }}>\n                <Nav.Link\n                    className={classes.styleText}\n                    href='/'\n                >Nobel Prize App\n                </Nav.Link>\n            </div>\n        )\n    }\n}\n\nexport default NavBarTitle;\n\n","import React from 'react'\nimport classes from  './ButtonCategory.module.css';\n\nfunction buttonCategory(props) {\n    // console.log(props.value) // category\n\n    return (\n        <button  \n         className={classes.b}\n        // style={{style: this.props.style}}\n            // className=\" btn btn-light d-inline m-2 border-dark rounded-0\"\n            name={props.name}\n            onClick={props.onClick}\n            value={props.value}\n        >\n            {props.name}\n        </button>\n    )\n}\n\nexport default buttonCategory;\n","import React, { Component } from 'react';\n// import Nav from 'react-bootstrap/Nav'\n// import Navbar from 'react-bootstrap/Navbar'\n// import { Link, Nav } from \"react-router-dom\";\nimport Nav from 'react-bootstrap/Nav'\n\nclass Footer extends Component {\n    render() {\n\n        const styleGithub = {\n            // border: '1px solid orange',\n            display: 'inline-block',\n            position: 'relative',\n            color: 'black',\n            fontSize: '1.2em',\n            textAlign: 'center',\n            top: '70%',\n            width: '100%',\n            margin: 'auto',\n            outline: 'none !important',\n            boxShadow: 'none !important'\n        }\n\n        return (\n            <div style={{ display: 'block', width: '100%' }}>\n                <Nav.Link\n                    style={styleGithub}\n                    href=\"https://github.com/EtienneWarneck/NobelPrizeDeploy2\"\n                >GitHub\n                </Nav.Link>\n            </div>\n        )\n    }\n}\n\nexport default Footer;\n\n","import React, { Component } from 'react';\n// import axios from 'axios';\nimport classes from './HomeButtons.module.css';\nimport ButtonCategory from '../../components/ButtonCategory/ButtonCategory';\nimport Footer from '../../components/Footer/Footer'\n\n//RESTRUCTURING TO SINGLE OUT THE CATEGORIES BUTTONS \nclass HomeButtons extends Component {\n\n    handleClick = (buttonValue) => {\n        console.log(\"PROPS HomeButtons\", this.props)\n        // only 3 first letters of the button to match category in the API:\n        buttonValue = buttonValue.slice(0, 3).toLowerCase();\n        // console.log(\"HANDLECLICK\")\n        // axios.get('http://api.nobelprize.org/2.0/nobelPrizes?sort=desc&nobelPrizeCategory=' + buttonValue + '&format=json&csvLang=en')\n        //     .then(res => {\n        //         const categoryData = res.data.nobelPrizes;         \n        // console.log(\"categoryData\", res.data.nobelPrizes)\n        // console.log(\"CATEGORY\", categoryData?.category?.en)\n        // this.setState({\n        //     category: buttonValue\n        // })\n        //Change the route to /cards/<buttonValue>\n        this.props.history.push(\"/\" + buttonValue);\n        // }).\n        // catch(err => console.log(err))\n    };\n    render() {\n        // const styleButton = {flex: '1 400px'};\n        const allCategoriesButtons = [\"Physics\", \"Chemistry\", \"Medicine\", \"Literature\", \"Peace\", \"Economics\"];\n        const allCatMap = allCategoriesButtons.map(button =>\n            < ButtonCategory\n                // style={styleButton}\n                key={button.toString()}\n                value={button}\n                name={button}\n                onClick={e => this.handleClick(e.target.value)}\n            />\n        )\n\n        // const style = {\n        //     border: '10px solid red',\n        //     borderTop: '1px solid lightgrey',\n        //     display: 'flex',\n        //     flexFlow: 'row wrap',\n        //     padding: '10px',\n        //     margin: 'auto',\n        //     marginTop: '4em',\n        //     alignItems: 'center',\n        //     justifyContent: 'space-around'\n        // }\n        return (\n\n            <div className={classes.container__section}>\n                {/* <div style={style}> */}\n                {allCatMap}\n                {/* </div > */}\n                <Footer/>\n            </div >\n\n        )\n    }\n}\n\nexport default HomeButtons;\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport './WinnerCard.css';\n// import Button from 'react-bootstrap/Button';\n// import Buttons from '../Buttons/Buttons'\n\nfunction WinnerCard(props) {\n    // console.log(\"[WinnerCard.js] Props\", props)\n    return (\n        <div className='container'>\n            <div className=\"row justify-content-center\">\n                <Card className=\"cols-12 col-md-8 p-0 m-4 mb-3 gold border-dark\">\n                    <Card.Header className=\"text-black\" as=\"h5\">{props.category} Laureate </Card.Header>\n                    <Card.Body className=\"white\">\n                        {/* <Card.Subtitle>{props.awardYear}</Card.Subtitle> */}\n                        <Card.Title className=\"ml-3 mb-1 \" as=\"h5\">{props.awardYear}</Card.Title>\n                        <Card.Title className=\" mt-1 ml-3\" as=\"h2\" >{props.name}</Card.Title>\n                        <Card.Title className=\" mt-1 ml-3\" as=\"h2\" >{props.name1}</Card.Title>\n                        <Card.Title className=\" mt-1 ml-3\" as=\"h2\" >{props.name2}</Card.Title>\n                        {/* <Card.Text className=\" m-3\" as=\"h5\" >{props.gender}</Card.Text> */}\n                        <Card.Text className=\" m-3\" as=\"h5\"><b>Motivation :</b> \"{props.motivation}\"</Card.Text>\n                        {/* <Card.Text className=\" m-3\" as=\"h5\"><b>Warning :</b>{props.awardYear < \"1901\" ? <Card.Text>Warning</Card.Text>: null} </Card.Text> */}\n                    </Card.Body>\n                    {/* <Card.Footer></Card.Footer> */}\n                </Card>\n            </div>\n        </div>\n    )\n}\n\nexport default WinnerCard;\n","import React, { Component } from 'react';\n// import Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n// import InputGroup from 'react-bootstrap/InputGroup';\n// import FormControl from 'react-bootstrap/FormControl';\n// import axios from 'axios';\nimport PropTypes from 'prop-types'\n\nclass SearchBar extends Component {\n    state = {\n        searchYear: '',\n        searchName: '',\n        category: ''\n    }\n\n    static propTypes = {\n        searchAll: PropTypes.func.isRequired,\n        // onClickAll: PropTypes.func.isRequired,\n        clearResults: PropTypes.func.isRequired,\n        showReset: PropTypes.bool.isRequired,\n    }\n\n    onChange = e => {\n        this.setState({ [e.target.name]: e.target.value });\n        console.log(\"[SearchBar.js] onChange\", e.target.value)\n    }\n\n    onSubmit = e => {\n        e.preventDefault();\n        // this.props.searchByYear(this.state.searchYear);\n        // this.props.searchByName(this.state.searchName);\n        //Sending the values to the parent\n        this.props.searchAll(this.state.searchYear, this.state.searchName)\n        //then remove values\n        this.setState({\n            searchYear: '',\n            searchName: '',\n            category: null\n        })\n    }\n\n    // onClickSearch = e => {\n    //     e.preventDefault();\n    //     console.log(\"ON CLICK\", this.state);\n    //     let category = this.props.match.params.category_name;\n    //     axios.get('http://api.nobelprize.org/2.0/nobelPrizes?limit=120&sort=desc&nobelPrizeCategory=' + category + '&format=json&csvLang=en')\n    //         .then(res => {\n    //             const categoryData = res.data.nobelPrizes;\n    //             this.setState({\n    //                 allCards: categoryData,\n    //                 // category: this.props.match.params.category_name,\n    //             })\n    //         })\n    //         .catch(err => console.log(err))\n    // }\n\n    // onClickReset = e => {\n    //     this.setState({\n    //         allCards: [],\n    //     });\n    // }\n\n    render() {\n        const { clearResults, showReset } = this.props;\n        return (\n            <Form\n                className=\"form-row p-0 m-3 mt-5 mb-5 justify-content-center\"\n                type=\"submit\"\n                onSubmit={this.onSubmit}\n            >\n                <Form.Label htmlFor=\"\" className=\"col-form-label text-right col-auto text-uppercase font-weight-normal\">Year :</Form.Label>\n                <Form.Control\n                    type=\"text\"\n                    className=\"col-2 text-center font-weight-bold border-dark\"\n                    name=\"searchYear\"\n                    value={this.state.searchYear}\n                    onChange={this.onChange}\n                    ref={input => this.inputField = input}\n                    onFocus={() => this.inputField.value = \"\"}\n                />\n                <Form.Label htmlFor=\"\" className=\"col-form-label ml-2 text-right col-auto font-weight-normal\">NAME :</Form.Label>\n                <Form.Control\n                    type=\"text\"\n                    className=\"col-4 font-weight-bold border-dark\"\n                    name=\"searchName\"\n                    value={this.state.searchName}\n                    onChange={this.onChange}\n                />\n                <Button\n                    type=\"submit\"\n                    onSubmit={this.onSubmit}\n                    variant=\"btn ml-4 col-1 outline-dark border-dark gold\"\n                // onClick={this.onClickSearch}\n                // onSubmit={() => this.handleSubmit()}\n                >SEARCH</Button>\n\n                {showReset && (\n                    <Button\n                        type=\"reset\"\n                        variant=\"btn ml-4 col-1 outline-dark border-dark gold\"\n                        onClick={clearResults}\n                    >RESET</Button>\n                )}\n\n            </Form>\n        )\n    }\n}\n\nexport default SearchBar;","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n// import axios from 'axios';\nimport PropTypes from 'prop-types'\n\n// An extra button to show ALL laureates with the NobelPrize API\nclass ShowAll extends Component {\n    state = {\n        searchYear: '',\n        searchName: '',\n        category: ''\n    }\n\n    static propTypes = {\n        onClickAll: PropTypes.func.isRequired,\n        clearResultsNP: PropTypes.func.isRequired,\n        showResetNP: PropTypes.bool.isRequired,\n\n    }\n\n    // componentDidMount(e) {\n    //     console.log( '[SearhBar.js] CDM this.props:', this.props)\n    //     console.log(\"[SearchBar.js] CDM this.state: \", this.state);\n    //     let category = this.props.match.params.category_name;\n    //     axios.get('http://api.nobelprize.org/2.0/nobelPrizes?limit=3&sort=desc&nobelPrizeCategory=' + this.props.category + '&format=json&csvLang=en')\n    //         .then(res => {\n    //             const categoryData = res.data.nobelPrizes;\n    //             this.setState({\n    //                 allCards: categoryData,\n    //                 category: this.props.match.params.category_name,\n    //             })\n    //         })\n    //         .catch(err => console.log(err))\n    // }\n\n    onSubmit = e => {\n        e.preventDefault();\n        //Sending the values to the parent\n        this.props.onClickAll()\n        //then remove values\n        this.setState({\n            searchYear: '',\n            searchName: '',\n            category: null,\n        })\n    }\n\n\n    // onClickAll = e => {\n    //     e.preventDefault();\n    //     console.log(\"[SearchBar.js] onClickAll this.state: \", this.state);\n    //     console.log(\"[SearchBar.js] onClickAll this.props: \", this.props);\n    //     // let category = this.props.match.params.category_name;\n    //     axios.get('http://api.nobelprize.org/2.0/nobelPrizes?limit=3&sort=desc&nobelPrizeCategory=' + this.props.category + '&format=json&csvLang=en')\n    //         .then(res => {\n    //             const categoryData = res.data.nobelPrizes;\n    //             this.setState({\n    //                 allCards: categoryData,\n    //                 // category: this.props.match.params.category_name,\n    //             })\n    //         })\n    //         .catch(err => console.log(err))\n    // }\n\n    onClickReset = e => {\n        this.setState({\n            allCardsNP: [],\n        });\n    }\n\n    render() {\n        // const { clearResultsNP, showResetNP } = this.props;\n        return (\n            <Form\n                className=\"form-row p-0 m-3 mt-5 mb-5 justify-content-center\"\n                type=\"submit\"\n                onSubmit={this.onSubmit}\n\n            >\n                <Button\n                    type=\"submit\"\n                    variant=\"btn ml-4 col-4 outline-dark border-dark gold\"\n                    onSubmit={this.onSubmit}\n                // onSubmit={() => this.handleSubmit()}\n                >SHOW ALL LAUREATES BY YEAR</Button>\n\n                {/* {showResetNP && (\n                    <Button\n                        type=\"reset\"\n                        variant=\"btn ml-4 col-1 outline-dark border-dark gold\"\n                        onClick={clearResultsNP}\n                    >RESET ALL</Button>\n                )} */}\n            </Form>\n        )\n    }\n}\n\nexport default ShowAll;","import React, { Component } from 'react';\nimport axios from 'axios';\n// import classes from './CardsCategory.module.css';\nimport WinnerCard from '../../components/WinnerCard/WinnerCard'\n// import HomeButtons from \"../HomeButtons/HomeButtons\"\n// import buttonCategory from \"../../components/ButtonCategory/ButtonCategory\"\nimport SearchBar from '../../components/SearchBar/SearchBar';\nimport ShowAll from '../../components/ShowAll/ShowAll';\n// import YearWarning from '../../components/YearWarning/YearWarning';\n// import styled from 'styled-components';\n// import Form from 'react-bootstrap/Form';\n// import Button from 'react-bootstrap/Button';\n\n// const StyledDiv = styled.div`\n// border: 10px solid orange;\n// display: inline;\n// `\n\nclass Cards extends Component {\n    state = {\n        allCards: [],\n        allCardsNP: [],\n        category: null,\n        searchYear: '',\n        searchYearNP: '', // NP : NobelPrize API\n        searchName: '',\n        searchNameNP: '',\n    }\n\n    /* async componentDidMount() {\n        //console.log(\"[CardsCategory.js] ComponentDidMount\", this.props)\n        let category = this.props.match.params.category_name;\n\n        await axios.get(`http://api.nobelprize.org/2.0/laureates?limit=200&nobelPrizeCategory=${category}&format=json&csvLang=en`)\n            .then(res => {\n                this.setState({\n                    allCards: res.data.laureates,\n                    //Fetch category from the API that your router provides\n                    category: this.props.match.params.category_name,\n                })\n            }).\n            catch(err => console.log(err))\n    }; */\n\n    //Search all with nobelPrizes API\n    onClickAll = async (searchYear, searchName) => {\n        // e.preventDefault();\n        // console.log(\"[CardsCategory.js] onClickAll this.state: \", this.state);\n        // console.log(\"[[CardsCategory.js] onClickAll this.props: \", this.props);\n        let category = this.props.match.params.category_name;\n        axios.get('http://api.nobelprize.org/2.0/nobelPrizes?limit=200&sort=asc&nobelPrizeCategory=' + category + '&format=json&csvLang=en')\n            .then(res => {\n                const categoryData = res.data.nobelPrizes;\n                const yearMatchNP = res.data.nobelPrizes[0]?.awardYear\n                // console.log('[CardsCategory.js] onClickAll yearMatch:', yearMatchNP)\n                this.setState({\n                    allCardsNP: categoryData,\n                    searchYearNP: yearMatchNP,\n                    category: this.props.match.params.category_name,\n                })\n            })\n            .catch(err => console.log(err))\n        this.clearResults();\n    }\n\n\n    //Search laureates with laureates API\n    searchAll = async (searchYear, searchName) => {\n        // console.log('[CardsCategory.js] searchName:', searchName)\n        // console.log('[CardsCategory.js] searchYear:', searchYear)\n        let category = this.props.match.params.category_name;\n        // console.log('[CardsCategory.js] category:', category)\n        await axios.get(`http://api.nobelprize.org/2.0/laureates?limit=200&name=${searchName}&nobelPrizeYear=${searchYear}&nobelPrizeCategory=${category}`)\n            .then(res => {\n                const data = res.data.laureates;\n                // console.log('[CardsCategory.js] res.data.laureates:', data)\n                // const nameMatch = res.data.laureates[0]?.knownName?.en \n                // console.log('[CardsCategory.js] nameMatch:', nameMatch)\n                const yearMatch = res.data.laureates[0]?.nobelPrizes[0]?.awardYear\n                // console.log('[CardsCategory.js] yearMatch:', yearMatch)\n                this.setState({\n                    allCards: data,\n                    // searchName:  nameMatch,\n                    searchYear: yearMatch\n                })\n            })\n            .catch(err => console.log(err));\n        this.clearResultsNP();\n    };\n\n    clearResults = (clearResults) => {\n        this.setState({\n            allCards: []\n        })\n    }\n\n    clearResultsNP = (clearResultsNP) => {\n        this.setState({\n            allCardsNP: []\n        })\n    }\n\n    // handleSubmit = e => {\n    //     console.log(\"SUBMIT\")\n    //     this.componentDidMount()\n    //     e.preventDefault();\n    // }\n\n    render() {\n        const { searchName, searchYear, searchNameNP, allCards, allCardsNP } = this.state;\n\n        //Filter and map Year and Name with Laureates API\n        let filterCards = allCards.filter(card => {\n            return (\n                card ?\n                    card.knownName?.en.toLowerCase().includes(searchName.toLowerCase())\n                    : console.log(\"PROBLEM ... \")\n            )\n        }).map((card) => {\n            return <WinnerCard\n                key={card.id}\n                awardYear={card.nobelPrizes[0].awardYear}\n                category={card.nobelPrizes[0]?.category?.en}\n                name={card.knownName?.en}\n                gender={card.gender}\n                motivation={card.nobelPrizes[0]?.motivation?.en}\n            />\n        });\n\n        //Filter and map ALL laureates with nobelPrizes API\n        let filterCardsNP = allCardsNP.filter(cardNP => {\n            return (\n                cardNP.laureates ?\n                    cardNP.laureates[0]?.knownName?.en.toLowerCase().includes(searchNameNP.toLowerCase()) ||\n                    cardNP.laureates[1]?.knownName?.en.toLowerCase().includes(searchNameNP.toLowerCase()) ||\n                    cardNP.laureates[2]?.knownName?.en.toLowerCase().includes(searchNameNP.toLowerCase())\n                    : console.log(\"PBNP\")\n            )\n        }).map((cardNP) => {\n            return <WinnerCard\n                key={cardNP.id}\n                awardYear={cardNP.awardYear}\n                category={cardNP.category?.en}\n                name={cardNP.laureates[0]?.knownName?.en}\n                name1={cardNP.laureates[1]?.knownName?.en}\n                name2={cardNP.laureates[2]?.knownName?.en}\n                motivation={cardNP.laureates[0]?.motivation?.en}\n            />\n        });\n\n        // const style = { display: 'inline', border: '10px solid orange', width: '100px' };\n\n        return (\n            <div>\n                {/* <StyledDiv> */}\n                {/* <HomeButtons /> */}\n                {/* </StyledDiv> */}\n                <div>\n                    <ShowAll\n                        onClickAll={this.onClickAll}\n                        clearResultsNP={this.clearResultsNP}\n                        showResetNP={allCardsNP.length > 0 ? true : false}\n                    />\n                    <SearchBar\n                        searchAll={this.searchAll}\n                        clearResults={this.clearResults}\n                        showReset={allCards.length > 0 ? true : false} />\n                </div>\n                <div>\n                    {filterCards}\n                    {filterCardsNP}\n                </div>\n            </div >\n        )\n    }\n}\n\nexport default Cards;\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport NavBarTitle from '../components/NavBarTitle/NavBarTitle'\nimport HomeButtons from './HomeButtons/HomeButtons';\nimport CardsCategory from './CardsCategory/CardsCategory';\n\nclass Routing extends Component {\n    render() {\n        return (\n            <div>\n                <Route path=\"/\" component={NavBarTitle} />\n                <Switch>\n                    <Route exact path=\"/\" component={HomeButtons} />\n                    <Route path=\"/:category_name\" component={CardsCategory} />\n                </Switch>\n            </div>\n        )\n    }\n}\n\nexport default Routing;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport Routing from './containers/Routing'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div >\n        <React.StrictMode>\n          <BrowserRouter>\n            <Routing />\n          </BrowserRouter>\n        </React.StrictMode>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}